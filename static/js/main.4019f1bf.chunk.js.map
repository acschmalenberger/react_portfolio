{"version":3,"sources":["components/NavTabs.js","components/pages/About.js","components/pages/Portfolio.js","components/pages/Contact.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["NavTabs","props","className","href","onClick","handlePageChange","currentPage","About","Portfolio","Contact","Container","state","page","setState","renderPage","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kPA6CeA,MA3Cf,SAAiBC,GACb,OACI,wBAAIC,UAAU,gBACd,wBAAIA,UAAU,YACV,uBACAC,KAAK,QACLC,QAAS,kBAAMH,EAAMI,iBAAiB,SACtCH,UAAiC,SAAtBD,EAAMK,YAAyB,kBAAoB,YAH9D,SAQJ,wBAAIJ,UAAU,YACV,uBACAC,KAAK,SACLC,QAAS,kBAAMH,EAAMI,iBAAiB,UACtCH,UAAiC,UAAtBD,EAAMK,YAA0B,kBAAoB,YAH/D,UAQJ,wBAAIJ,UAAU,YACV,uBACAC,KAAK,QACLC,QAAS,kBAAMH,EAAMI,iBAAiB,SACtCH,UAAiC,SAAtBD,EAAMK,YAAyB,kBAAoB,YAH9D,SAQJ,wBAAIJ,UAAU,YACV,uBACAC,KAAK,WACLC,QAAS,kBAAMH,EAAMI,iBAAiB,YACtCH,UAAiC,YAAtBD,EAAMK,YAA4B,kBAAoB,YAHjE,cClBGC,EAbD,kBACV,6BACI,0CACA,6bCeOC,EAlBG,kBACd,6BACI,8CACA,o6BCcOC,EAjBC,kBACZ,6BACI,4CACA,oxBCiCOC,E,4MA/BXC,MAAQ,CACJL,YAAa,S,EAGjBD,iBAAmB,SAAAO,GACf,EAAKC,SAAS,CAAEP,YAAaM,K,EAGjCE,WAAa,WACT,MAA+B,UAA3B,EAAKH,MAAML,YACR,kBAAC,EAAD,MAC+B,cAA3B,EAAKK,MAAML,YACf,kBAAC,EAAD,MAEA,kBAAC,EAAD,O,uDAKP,OACA,6BACI,kBAAC,EAAD,CACAA,YAAaS,KAAKJ,MAAML,YACxBD,iBAAkBU,KAAKV,mBAEtBU,KAAKD,kB,GA1BME,aCATC,EAFH,kBAAM,kBAAC,EAAD,OCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.4019f1bf.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction NavTabs(props) {\n    return (\n        <ul className=\"nav nav-tabs\">\n        <li className=\"nav-item\">\n            <a\n            href=\"#home\"\n            onClick={() => props.handlePageChange(\"Home\")}\n            className={props.currentPage === \"Home\" ? \"nav-link active\" : \"nav-link\"}\n            >\n            Home\n            </a>\n        </li>\n        <li className=\"nav-item\">\n            <a\n            href=\"#about\"\n            onClick={() => props.handlePageChange(\"About\")}\n            className={props.currentPage === \"About\" ? \"nav-link active\" : \"nav-link\"}\n            >\n            About\n            </a>\n        </li>\n        <li className=\"nav-item\">\n            <a\n            href=\"#blog\"\n            onClick={() => props.handlePageChange(\"Blog\")}\n            className={props.currentPage === \"Blog\" ? \"nav-link active\" : \"nav-link\"}\n            >\n            Blog\n            </a>\n        </li>\n        <li className=\"nav-item\">\n            <a\n            href=\"#contact\"\n            onClick={() => props.handlePageChange(\"Contact\")}\n            className={props.currentPage === \"Contact\" ? \"nav-link active\" : \"nav-link\"}\n            >\n            Contact\n            </a>\n        </li>\n        </ul>\n    );\n}\n\nexport default NavTabs;\n","import React from \"react\";\n\nconst About = () => (\n    <div>\n        <h1>About Page</h1>\n        <p>\n        Nunc pharetra finibus est at efficitur. Praesent sed congue diam. Integer gravida dui mauris,\n        ut interdum nunc egestas sed. Aenean sed mollis diam. Nunc aliquet risus ac finibus porta. Nam\n        quis arcu non lectus tincidunt fermentum. Suspendisse aliquet orci porta quam semper\n        imperdiet. Praesent euismod mi justo, faucibus scelerisque risus cursus in. Sed rhoncus mollis\n        diam, sit amet facilisis lectus blandit at.\n        </p>\n    </div>\n);\n\nexport default About;","import React from \"react\";\n\nconst Portfolio = () => (\n    <div>\n        <h1>Portfolio Page</h1>\n        <p>\n        Donec a volutpat quam. Curabitur nec varius justo, sed rutrum ligula. Curabitur pellentesque\n        turpis sit amet eros iaculis, a mollis arcu dictum. Ut vel ante eget massa ornare placerat.\n        Etiam nisl orci, finibus sodales volutpat et, hendrerit ut dolor. Suspendisse porta dictum\n        nunc, sed pretium risus rutrum eget. Nam consequat, ligula in faucibus vestibulum, nisi justo\n        laoreet risus, luctus luctus mi lacus sit amet libero. Class aptent taciti sociosqu ad litora\n        torquent per conubia nostra, per inceptos himenaeos. Mauris pretium condimentum tellus eget\n        lobortis. Interdum et malesuada fames ac ante ipsum primis in faucibus. Donec placerat\n        accumsan mi, ut congue neque placerat eu. Donec nec ipsum in velit pellentesque vehicula sit\n        amet at augue. Maecenas aliquam bibendum congue. Pellentesque semper, lectus non ullamcorper\n        iaculis, est ligula suscipit velit, sed bibendum turpis dui in sapien.\n        </p>\n    </div>\n);\n\nexport default Portfolio;\n","import React from \"react\";\n\nconst Contact = () => (\n    <div>\n        <h1>Contact Page</h1>\n        <p>\n        Integer cursus bibendum sem non pretium. Vestibulum in aliquet sem, quis molestie urna.\n        Aliquam semper ultrices varius. Aliquam faucibus sit amet magna a ultrices. Aenean\n        pellentesque placerat lacus imperdiet efficitur. In felis nisl, luctus non ante euismod,\n        tincidunt bibendum mi. In a molestie nisl, eu sodales diam. Nam tincidunt lacus quis magna\n        posuere, eget tristique dui dapibus. Maecenas fermentum elementum faucibus. Quisque nec metus\n        vestibulum, egestas massa eu, sollicitudin ipsum. Nulla facilisi. Sed ut erat ligula. Nam\n        tincidunt nunc in nibh dictum ullamcorper. Class aptent taciti sociosqu ad litora torquent per\n        conubia nostra, per inceptos himenaeos. Etiam ornare rutrum felis at rhoncus. Etiam vel\n        condimentum magna, quis tempor nulla.\n        </p>\n    </div>\n);\n\nexport default Contact;","import React, { Component } from \"react\";\nimport NavTabs from \"./NavTabs\";\nimport About from \"./pages/About\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Contact from \"./pages/Contact\";\n\nclass Container extends Component {\n    state = {\n        currentPage: \"About\"\n    };\n\n    handlePageChange = page => {\n        this.setState({ currentPage: page });\n    };\n\n    renderPage = () => {\n        if (this.state.currentPage === \"About\") {\n        return <About />;\n        } else if (this.state.currentPage === \"Portfolio\") {\n        return <Portfolio />;\n        } else {\n        return <Contact />;\n        }\n    };\n\n    render() {\n        return (\n        <div>\n            <NavTabs\n            currentPage={this.state.currentPage}\n            handlePageChange={this.handlePageChange}\n            />\n            {this.renderPage()}\n        </div>\n        );\n    }\n}\n\nexport default Container;\n","import React from 'react';\nimport './App.css';\nimport Container from \"./components/Container.js\";\n\nconst App = () => <Container />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}